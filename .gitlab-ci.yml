stages:
  - test
  - lint

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

.yarn_cache_tpl:
  before_script:
    - echo 'yarn-offline-mirror ".yarn-cache/"' >> .yarnrc
    - echo 'yarn-offline-mirror-pruning true' >> .yarnrc
    - yarn install --frozen-lockfile --no-progress
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - .yarn-cache/

unit-test-job:
  image:
    name: node:latest
  stage: test
  script:
    - yarn run test:unit --ci
  extends: .yarn_cache_tpl
  tags:
    - test-k8s
  rules:
    - if: "$CI_COMMIT_BRANCH"
  artifacts:
    when: always
    expire_in: "3 days"
    paths:
      - reports/junit.xml
    reports:
      junit: reports/junit.xml

cov-test-job:
  image:
    name: node:latest
  stage: test
  script:
    - yarn run test:cov --ci --coverageDirectory=coverage
  extends: .yarn_cache_tpl
  tags:
    - test-k8s
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
  artifacts:
    when: always
    expire_in: "3 days"
    paths:
      - reports/junit.xml
      - coverage/
    reports:
      junit: reports/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml

lint-test-job:
  image:
    name: node:latest
  stage: lint
  variables:
    ESLINT_CODE_QUALITY_REPORT: gl-codequality.json
  script:
    - yarn run lint --format eslint-formatter-multiple
  extends: .yarn_cache_tpl
  tags:
    - test-k8s
  rules:
    - if: "$CI_COMMIT_BRANCH"
      when: always
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
  artifacts:
    when: always
    expire_in: "3 days"
    paths:
      - gl-codequality.json
      - reports/eslint-junit-report.xml
    reports:
      codequality: gl-codequality.json
      junit: reports/eslint-junit-report.xml
